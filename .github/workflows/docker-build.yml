name: Docker Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create env file
        run: |
          mkdir -p env
          echo "DB_HOST=db
          DB_PORT=3306
          DB_USER=test_user
          DB_PASSWORD=test_password
          DB_NAME=test_db
          DB_ROOT_PASSWORD=test_root_password
          AUTH_PORT=3000
          JWT_SECRET=test_jwt_secret
          AUTH_DB_HOST=db
          AUTH_DB_USER=test_user
          AUTH_DB_PASSWORD=test_password
          AUTH_DB_NAME=test_db
          API_PORT=3001
          API_DB_HOST=db
          API_DB_USER=test_user
          API_DB_PASSWORD=test_password
          API_DB_NAME=test_db
          VAULT_TOKEN=test_token
          VAULT_ADDR=http://vault:8200" > env/dev.env

      - name: Build and test Docker Compose
        run: |
          docker-compose build
          ENV=dev docker-compose up -d
          docker-compose ps
          sleep 30  # Attendre que les services d√©marrent
          docker-compose logs

      - name: Test services
        run: |
          # Test auth-app
          curl -f http://localhost:3000/health || exit 1
          
          # Test api-app
          curl -f http://localhost:3001/health || exit 1
          
          # Test Vault
          curl -f http://localhost:8200/v1/sys/health || exit 1

      - name: Cleanup
        if: always()
        run: docker-compose down -v