services:
  auth-app:
    build: 
      context: ./auth-app
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    environment:
      - PORT=${AUTH_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=${AUTH_DB_HOST}
      - DB_USER=${AUTH_DB_USER}
      - DB_PASSWORD=${AUTH_DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
    depends_on:
      - db
    networks:
      - app-network

  api-app:
    build:
      context: ./api-app
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - PORT=${API_PORT}
      - DB_HOST=${API_DB_HOST}
      - DB_USER=${API_DB_USER}
      - DB_PASSWORD=${API_DB_PASSWORD}
      - DB_NAME=${API_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - auth-app
    networks:
      - app-network

  db:
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - app-network

  vault:
    image: hashicorp/vault:1.13.3
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - app-network
    profiles:
      - vault

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
